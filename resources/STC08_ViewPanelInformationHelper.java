// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>STC08_ViewPanelInformation</b><br>
 * Generated     : <b>2015/11/22 2:30:15 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 8.1 x86 6.3 <br>
 * 
 * @since  November 22, 2015
 * @author John
 */
public abstract class STC08_ViewPanelInformationHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * LogInsubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Log In
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : loginButton
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_logInsubmit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_logInsubmit"));
	}
	/**
	 * LogInsubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Log In
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : loginButton
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_logInsubmit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_logInsubmit"), anchor, flags);
	}
	
	/**
	 * ISCControlSystem: with default state.
	 *		.title : ISC Control System
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://localhost:8080/International_Science_Consortium/
	 */
	protected DocumentTestObject document_iscControlSystem() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_iscControlSystem"));
	}
	/**
	 * ISCControlSystem: with specific test context and state.
	 *		.title : ISC Control System
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://localhost:8080/International_Science_Consortium/
	 */
	protected DocumentTestObject document_iscControlSystem(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_iscControlSystem"), anchor, flags);
	}
	
	/**
	 * Administer: with default state.
	 *		.text : Administer
	 * 		.href : http://localhost:8080/International_Science_Consortium/messagePage?messageCode=Y ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_administer() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_administer"));
	}
	/**
	 * Administer: with specific test context and state.
	 *		.text : Administer
	 * 		.href : http://localhost:8080/International_Science_Consortium/messagePage?messageCode=Y ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_administer(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_administer"), anchor, flags);
	}
	
	/**
	 * DisplayMyPanels: with default state.
	 *		.text : Display My Panels
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanels.jsp
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 3
	 */
	protected GuiTestObject link_displayMyPanels() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_displayMyPanels"));
	}
	/**
	 * DisplayMyPanels: with specific test context and state.
	 *		.text : Display My Panels
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanels.jsp
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 3
	 */
	protected GuiTestObject link_displayMyPanels(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_displayMyPanels"), anchor, flags);
	}
	
	/**
	 * EditPanelistProfile: with default state.
	 *		.text : Edit Panelist Profile
	 * 		.href : http://localhost:8080/International_Science_Consortium/messagePage?messageCode=Y ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_editPanelistProfile() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_editPanelistProfile"));
	}
	/**
	 * EditPanelistProfile: with specific test context and state.
	 *		.text : Edit Panelist Profile
	 * 		.href : http://localhost:8080/International_Science_Consortium/messagePage?messageCode=Y ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_editPanelistProfile(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_editPanelistProfile"), anchor, flags);
	}
	
	/**
	 * Logout: with default state.
	 *		.text : Logout
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/logout
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected GuiTestObject link_logout() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_logout"));
	}
	/**
	 * Logout: with specific test context and state.
	 *		.text : Logout
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/logout
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected GuiTestObject link_logout(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_logout"), anchor, flags);
	}
	
	/**
	 * ViewPanel: with default state.
	 *		.text : View Panel
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanel.jsp?panelID= ...
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_viewPanel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_viewPanel"));
	}
	/**
	 * ViewPanel: with specific test context and state.
	 *		.text : View Panel
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanel.jsp?panelID= ...
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link_viewPanel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_viewPanel"), anchor, flags);
	}
	
	/**
	 * ViewPanel: with default state.
	 *		.text : View Panel
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanel.jsp?panelID= ...
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 2
	 */
	protected GuiTestObject link_viewPanel2() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_viewPanel2"));
	}
	/**
	 * ViewPanel: with specific test context and state.
	 *		.text : View Panel
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanel.jsp?panelID= ...
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 2
	 */
	protected GuiTestObject link_viewPanel2(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_viewPanel2"), anchor, flags);
	}
	
	/**
	 * ViewPanel: with default state.
	 *		.text : View Panel
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanel.jsp?panelID= ...
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected GuiTestObject link_viewPanel3() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_viewPanel3"));
	}
	/**
	 * ViewPanel: with specific test context and state.
	 *		.text : View Panel
	 * 		.id : 
	 * 		.href : http://localhost:8080/International_Science_Consortium/displayPanel.jsp?panelID= ...
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected GuiTestObject link_viewPanel3(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link_viewPanel3"), anchor, flags);
	}
	
	/**
	 * HtmlTable_0: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_htmlTable_0() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_htmlTable_0"));
	}
	/**
	 * HtmlTable_0: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject table_htmlTable_0(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_htmlTable_0"), anchor, flags);
	}
	
	/**
	 * HtmlTable_1: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 1
	 */
	protected StatelessGuiSubitemTestObject table_htmlTable_1() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_htmlTable_1"));
	}
	/**
	 * HtmlTable_1: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.classIndex : 1
	 */
	protected StatelessGuiSubitemTestObject table_htmlTable_1(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("table_htmlTable_1"), anchor, flags);
	}
	
	/**
	 * password: with default state.
	 *		.id : 
	 * 		.type : password
	 * 		.title : 
	 * 		.class : Html.INPUT.password
	 * 		.name : password
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_password() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_password"));
	}
	/**
	 * password: with specific test context and state.
	 *		.id : 
	 * 		.type : password
	 * 		.title : 
	 * 		.class : Html.INPUT.password
	 * 		.name : password
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_password(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_password"), anchor, flags);
	}
	
	/**
	 * username: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : username
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_username() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_username"));
	}
	/**
	 * username: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : username
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_username(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_username"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point htmlBrowser_standard object in the SUT.
	 */
	protected IFtVerificationPoint htmlBrowser_standardVP() 
	{
		return vp("htmlBrowser_standard");
	}
	protected IFtVerificationPoint htmlBrowser_standardVP(TestObject anchor)
	{
		return vp("htmlBrowser_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy1Administer_text object in the SUT.
	 */
	protected IFtVerificationPoint Rainy1Administer_textVP() 
	{
		return vp("Rainy1Administer_text");
	}
	protected IFtVerificationPoint Rainy1Administer_textVP(TestObject anchor)
	{
		return vp("Rainy1Administer_text", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy1Browser object in the SUT.
	 */
	protected IFtVerificationPoint Rainy1BrowserVP() 
	{
		return vp("Rainy1Browser");
	}
	protected IFtVerificationPoint Rainy1BrowserVP(TestObject anchor)
	{
		return vp("Rainy1Browser", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy1HtmlTable object in the SUT.
	 */
	protected IFtVerificationPoint Rainy1HtmlTableVP() 
	{
		return vp("Rainy1HtmlTable");
	}
	protected IFtVerificationPoint Rainy1HtmlTableVP(TestObject anchor)
	{
		return vp("Rainy1HtmlTable", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy2Browser object in the SUT.
	 */
	protected IFtVerificationPoint Rainy2BrowserVP() 
	{
		return vp("Rainy2Browser");
	}
	protected IFtVerificationPoint Rainy2BrowserVP(TestObject anchor)
	{
		return vp("Rainy2Browser", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy2HtmlTable object in the SUT.
	 */
	protected IFtVerificationPoint Rainy2HtmlTableVP() 
	{
		return vp("Rainy2HtmlTable");
	}
	protected IFtVerificationPoint Rainy2HtmlTableVP(TestObject anchor)
	{
		return vp("Rainy2HtmlTable", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy2PanelistProfile_text object in the SUT.
	 */
	protected IFtVerificationPoint Rainy2PanelistProfile_textVP() 
	{
		return vp("Rainy2PanelistProfile_text");
	}
	protected IFtVerificationPoint Rainy2PanelistProfile_textVP(TestObject anchor)
	{
		return vp("Rainy2PanelistProfile_text", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy3Browser object in the SUT.
	 */
	protected IFtVerificationPoint Rainy3BrowserVP() 
	{
		return vp("Rainy3Browser");
	}
	protected IFtVerificationPoint Rainy3BrowserVP(TestObject anchor)
	{
		return vp("Rainy3Browser", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy3DisplayMyPanels_text object in the SUT.
	 */
	protected IFtVerificationPoint Rainy3DisplayMyPanels_textVP() 
	{
		return vp("Rainy3DisplayMyPanels_text");
	}
	protected IFtVerificationPoint Rainy3DisplayMyPanels_textVP(TestObject anchor)
	{
		return vp("Rainy3DisplayMyPanels_text", anchor);
	}
	
	/**
	 * Locate and return the verification point Rainy3HtmlTable object in the SUT.
	 */
	protected IFtVerificationPoint Rainy3HtmlTableVP() 
	{
		return vp("Rainy3HtmlTable");
	}
	protected IFtVerificationPoint Rainy3HtmlTableVP(TestObject anchor)
	{
		return vp("Rainy3HtmlTable", anchor);
	}
	
	/**
	 * Locate and return the verification point Sunny1Browser object in the SUT.
	 */
	protected IFtVerificationPoint Sunny1BrowserVP() 
	{
		return vp("Sunny1Browser");
	}
	protected IFtVerificationPoint Sunny1BrowserVP(TestObject anchor)
	{
		return vp("Sunny1Browser", anchor);
	}
	
	/**
	 * Locate and return the verification point Sunny1HtmlTable object in the SUT.
	 */
	protected IFtVerificationPoint Sunny1HtmlTableVP() 
	{
		return vp("Sunny1HtmlTable");
	}
	protected IFtVerificationPoint Sunny1HtmlTableVP(TestObject anchor)
	{
		return vp("Sunny1HtmlTable", anchor);
	}
	
	/**
	 * Locate and return the verification point Sunny2Browser object in the SUT.
	 */
	protected IFtVerificationPoint Sunny2BrowserVP() 
	{
		return vp("Sunny2Browser");
	}
	protected IFtVerificationPoint Sunny2BrowserVP(TestObject anchor)
	{
		return vp("Sunny2Browser", anchor);
	}
	
	/**
	 * Locate and return the verification point Sunny2HtmlTable object in the SUT.
	 */
	protected IFtVerificationPoint Sunny2HtmlTableVP() 
	{
		return vp("Sunny2HtmlTable");
	}
	protected IFtVerificationPoint Sunny2HtmlTableVP(TestObject anchor)
	{
		return vp("Sunny2HtmlTable", anchor);
	}
	
	/**
	 * Locate and return the verification point Sunny3Browser object in the SUT.
	 */
	protected IFtVerificationPoint Sunny3BrowserVP() 
	{
		return vp("Sunny3Browser");
	}
	protected IFtVerificationPoint Sunny3BrowserVP(TestObject anchor)
	{
		return vp("Sunny3Browser", anchor);
	}
	
	/**
	 * Locate and return the verification point Sunny3HtmlTable object in the SUT.
	 */
	protected IFtVerificationPoint Sunny3HtmlTableVP() 
	{
		return vp("Sunny3HtmlTable");
	}
	protected IFtVerificationPoint Sunny3HtmlTableVP(TestObject anchor)
	{
		return vp("Sunny3HtmlTable", anchor);
	}
	
	

	protected STC08_ViewPanelInformationHelper()
	{
		setScriptName("STC08_ViewPanelInformation");
	}
	
}

